# 1~100까지 들어있는 리스트 만들기

# 방법 1: 리스트 컴프리헨션 사용
# 특징: 가장 간결하고 파이썬다운 방식으로 리스트를 생성
# 장점: 코드가 짧고 직관적이며 가독성이 좋음
# 단점: 조건문이나 복잡한 처리가 추가되면 다소 길어질 수 있음
lst01 = [x for x in range(1, 101)]

# 방법 2: list()와 range() 사용
# 특징: range() 함수의 결과를 list()로 감싸서 리스트를 생성
# 장점: 간결하며 범위의 시작과 끝을 쉽게 지정할 수 있음
# 단점: 리스트 컴프리헨션보다 다소 직관적이지 않을 수 있음
lst02 = list(range(1, 101))

# 방법 3: for 루프와 append() 사용
# 특징: 빈 리스트를 만들고, for 루프를 통해 값을 추가하는 방식
# 장점: 코드의 흐름을 명확하게 보여줄 수 있음
# 단점: 코드가 길고, 리스트 컴프리헨션보다 속도가 느림
lst03 = []
for i in range(1, 101):
    lst03.append(i)

# 방법 4: map() 함수 사용
# 특징: map()을 사용하여 range()의 각 값을 int로 변환하고 리스트로 변환
# 장점: 간단하게 작성할 수 있으며, 람다 표현식 등과 함께 사용할 수 있음
# 단점: 리스트 컴프리헨션에 비해 직관성이 떨어지고, 범위 생성 외의 변환 작업이 필요할 때 주로 사용
lst04 = list(map(int, range(1, 101)))

# 방법 5: numpy를 사용한 경우 (외부 라이브러리 필요)
# 특징: numpy의 arange() 함수를 사용하여 리스트 생성
# 장점: 대규모 배열 생성 시 성능이 뛰어나며, 벡터 연산 등의 고급 기능 사용 가능
# 단점: numpy 라이브러리를 별도로 설치해야 하며, 간단한 리스트 생성에는 과도할 수 있음
import numpy as np
lst05 = list(np.arange(1, 101))